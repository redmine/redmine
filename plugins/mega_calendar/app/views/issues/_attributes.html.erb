<% if Redmine::VERSION.to_s.starts_with?('3.3') || Redmine::VERSION.to_s.starts_with?('3.4') || Redmine::VERSION.to_s.starts_with?('4.0') %>

<%= labelled_fields_for :issue, @issue do |f| %>

<div class="splitcontent">
<div class="splitcontentleft">
<% if @issue.safe_attribute?('status_id') && @allowed_statuses.present? %>
<p><%= f.select :status_id, (@allowed_statuses.collect {|p| [p.name, p.id]}), {:required => true},
                :onchange => "updateIssueFrom('#{escape_javascript update_issue_form_path(@project, @issue)}', this)" %></p>
<%= hidden_field_tag 'was_default_status', @issue.status_id, :id => nil if @issue.status == @issue.default_status %>
<% else %>
<p><label><%= l(:field_status) %></label> <%= @issue.status %></p>
<% end %>

<% if @issue.safe_attribute? 'priority_id' %>
<p><%= f.select :priority_id, (@priorities.collect {|p| [p.name, p.id]}), {:required => true} %></p>
<% end %>

<% if @issue.safe_attribute? 'assigned_to_id' %>
<p><%= f.select :assigned_to_id, principals_options_for_select(@issue.assignable_users, @issue.assigned_to), :include_blank => true, :required => @issue.required_attribute?('assigned_to_id') %></p>
<% end %>

<% if @issue.safe_attribute?('category_id') && @issue.project.issue_categories.any? %>
<p><%= f.select :category_id, (@issue.project.issue_categories.collect {|c| [c.name, c.id]}), :include_blank => true, :required => @issue.required_attribute?('category_id') %>
<%= link_to(l(:label_issue_category_new),
            new_project_issue_category_path(@issue.project),
            :remote => true,
            :method => 'get',
            :title => l(:label_issue_category_new),
            :tabindex => 200,
            :class => 'icon-only icon-add'
           ) if User.current.allowed_to?(:manage_categories, @issue.project) %></p>
<% end %>

<% if @issue.safe_attribute?('fixed_version_id') && @issue.assignable_versions.any? %>
<p><%= f.select :fixed_version_id, version_options_for_select(@issue.assignable_versions, @issue.fixed_version), :include_blank => true, :required => @issue.required_attribute?('fixed_version_id') %>
<%= link_to(l(:label_version_new),
            new_project_version_path(@issue.project),
            :remote => true,
            :method => 'get',
            :title => l(:label_version_new),
            :tabindex => 200,
            :class => 'icon-only icon-add'
           ) if User.current.allowed_to?(:manage_versions, @issue.project) %>
</p>
<% end %>
</div>

<div class="splitcontentright">
<% if @issue.safe_attribute? 'parent_issue_id' %>
<p id="parent_issue"><%= f.text_field :parent_issue_id, :size => 10, :required => @issue.required_attribute?('parent_issue_id') %></p>
<%= javascript_tag "observeAutocompleteField('issue_parent_issue_id', '#{escape_javascript auto_complete_issues_path(:project_id => @issue.project, :scope => Setting.cross_project_subtasks)}')" %>
<% end %>

<% if @issue.safe_attribute? 'start_date' %>
<p id="start_date_area">
  <%= f.date_field(:start_date, :size => 10, :required => @issue.required_attribute?('start_date')) %>
  <%= calendar_for('issue_start_date') %>
  <input type="text" id="time_begin" name="issue[time_begin]" value="<%= (!params[:issue].blank? && !params[:issue][:time_begin].blank? ? params[:issue][:time_begin].to_s : '') %>" />
</p>
<% end %>

<% if @issue.safe_attribute? 'due_date' %>
<p id="due_date_area">
  <%= f.date_field(:due_date, :size => 10, :required => @issue.required_attribute?('due_date')) %>
  <%= calendar_for('issue_due_date') %>
  <input type="text" id="time_end" name="issue[time_end]" value="<%= (!params[:issue].blank? && !params[:issue][:time_end].blank? ? params[:issue][:time_end].to_s : '') %>" />
</p>
<% end %>

<% if @issue.safe_attribute? 'estimated_hours' %>
<p><%= f.text_field :estimated_hours, :size => 3, :required => @issue.required_attribute?('estimated_hours') %> <%= l(:field_hours) %></p>
<% end %>

<% if @issue.safe_attribute?('done_ratio') && Issue.use_field_for_done_ratio? %>
<p><%= f.select :done_ratio, ((0..10).to_a.collect {|r| ["#{r*10} %", r*10] }), :required => @issue.required_attribute?('done_ratio') %></p>
<% end %>
</div>
</div>

<% if @issue.safe_attribute? 'custom_field_values' %>
<%= render :partial => 'issues/form_custom_fields' %>
<% end %>

<% end %>

<% include_calendar_headers_tags %>


<% else %>

<%= labelled_fields_for :issue, @issue do |f| %>

<div class="splitcontent">
<div class="splitcontentleft">
<% if @issue.safe_attribute?('status_id') && @allowed_statuses.present? %>
<p><%= f.select :status_id, (@allowed_statuses.collect {|p| [p.name, p.id]}), {:required => true},
                :onchange => "updateIssueFrom('#{escape_javascript update_issue_form_path(@project, @issue)}')" %></p>
<%= hidden_field_tag 'was_default_status', @issue.status_id, :id => nil if @issue.status == @issue.default_status %>
<% else %>
<p><label><%= l(:field_status) %></label> <%= @issue.status %></p>
<% end %>

<% if @issue.safe_attribute? 'priority_id' %>
<p><%= f.select :priority_id, (@priorities.collect {|p| [p.name, p.id]}), {:required => true}, :disabled => !@issue.leaf? %></p>
<% end %>

<% if @issue.safe_attribute? 'assigned_to_id' %>
<p><%= f.select :assigned_to_id, principals_options_for_select(@issue.assignable_users, @issue.assigned_to), :include_blank => true, :required => @issue.required_attribute?('assigned_to_id') %></p>
<% end %>

<% if @issue.safe_attribute?('category_id') && @issue.project.issue_categories.any? %>
<p><%= f.select :category_id, (@issue.project.issue_categories.collect {|c| [c.name, c.id]}), :include_blank => true, :required => @issue.required_attribute?('category_id') %>
<%= link_to(image_tag('add.png', :style => 'vertical-align: middle;'),
            new_project_issue_category_path(@issue.project),
            :remote => true,
            :method => 'get',
            :title => l(:label_issue_category_new),
            :tabindex => 200) if User.current.allowed_to?(:manage_categories, @issue.project) %></p>
<% end %>

<% if @issue.safe_attribute?('fixed_version_id') && @issue.assignable_versions.any? %>
<p><%= f.select :fixed_version_id, version_options_for_select(@issue.assignable_versions, @issue.fixed_version), :include_blank => true, :required => @issue.required_attribute?('fixed_version_id') %>
<%= link_to(image_tag('add.png', :style => 'vertical-align: middle;'),
            new_project_version_path(@issue.project),
            :remote => true,
            :method => 'get',
            :title => l(:label_version_new),
            :tabindex => 200) if User.current.allowed_to?(:manage_versions, @issue.project) %>
</p>
<% end %>
</div>

<div class="splitcontentright">
<% if @issue.safe_attribute? 'parent_issue_id' %>
<p id="parent_issue"><%= f.text_field :parent_issue_id, :size => 10, :required => @issue.required_attribute?('parent_issue_id') %></p>
<%= javascript_tag "observeAutocompleteField('issue_parent_issue_id', '#{escape_javascript auto_complete_issues_path(:project_id => @issue.project, :scope => Setting.cross_project_subtasks)}')" %>
<% end %>

<% if @issue.safe_attribute? 'start_date' %>
<p id="start_date_area">
  <%= f.date_field(:start_date, :size => 10, :disabled => !@issue.leaf?,
                   :required => @issue.required_attribute?('start_date')) %>
  <%= calendar_for('issue_start_date') if @issue.leaf? %>
  <input type="text" id="time_begin" name="issue[time_begin]" value="<%= (!params[:issue].blank? && !params[:issue][:time_begin].blank? ? params[:issue][:time_begin].to_s : '') %>" />
</p>
<% end %>

<% if @issue.safe_attribute? 'due_date' %>
<p id="due_date_area">
  <%= f.date_field(:due_date, :size => 10, :disabled => !@issue.leaf?,
                   :required => @issue.required_attribute?('due_date')) %>
  <%= calendar_for('issue_due_date') if @issue.leaf? %>
  <input type="text" id="time_end" name="issue[time_end]" value="<%= (!params[:issue].blank? && !params[:issue][:time_end].blank? ? params[:issue][:time_end].to_s : '') %>" />
</p>
<% end %>

<% if @issue.safe_attribute? 'estimated_hours' %>
<p><%= f.text_field :estimated_hours, :size => 3, :disabled => !@issue.leaf?, :required => @issue.required_attribute?('estimated_hours') %> <%= l(:field_hours) %></p>
<% end %>

<% if @issue.safe_attribute?('done_ratio') && @issue.leaf? && Issue.use_field_for_done_ratio? %>
<p><%= f.select :done_ratio, ((0..10).to_a.collect {|r| ["#{r*10} %", r*10] }), :required => @issue.required_attribute?('done_ratio') %></p>
<% end %>
</div>
</div>

<% if @issue.safe_attribute? 'custom_field_values' %>
<%= render :partial => 'issues/form_custom_fields' %>
<% end %>

<% end %>

<% include_calendar_headers_tags %>

<% end %>
<%
  js_locale = User.current.language  rescue nil
  if js_locale.blank?
    js_locale = Setting.default_language
  end
 js_format = 'H:i'
 js_val_start = ''
 js_val_end = ''
 ticket_time = TicketTime.find_by_issue_id(@issue.id)
 if !@issue.new_record? && !ticket_time.blank? && !ticket_time.time_begin.blank? && !ticket_time.time_end.blank?
   js_val_start = ticket_time.time_begin.to_time.utc.strftime("%H:%M").to_s
   js_val_end = ticket_time.time_end.to_time.utc.strftime("%H:%M").to_s
 end
%>
<script type="text/javascript">
 $.datetimepicker.setLocale('<%= js_locale %>');
 var options_start = {
   i18n: {
    de: {
     months: ['Januar','Februar','März','April','Mai','Juni','Juli','August','September','Oktober','November','Dezember'],
     dayOfWeek: ["So.", "Mo", "Di", "Mi","Do", "Fr", "Sa."]
    }
   },
   timepicker: true,
   datepicker: false,
   format: '<%= js_format %>'
 };
 var options_end = {
   i18n: {
    de: {
     months: ['Januar','Februar','März','April','Mai','Juni','Juli','August','September','Oktober','November','Dezember'],
     dayOfWeek: ["So.", "Mo", "Di", "Mi","Do", "Fr", "Sa."]
    }
   },
   timepicker: true,
   datepicker: false,
   format: '<%= js_format %>'
 };
 options_start['value'] = '<%= js_val_start %>';
 options_end['value'] = '<%= js_val_end %>';
 $("#time_begin").datetimepicker(options_start);
 $("#time_end").datetimepicker(options_end);
</script>
